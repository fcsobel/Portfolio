@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-md-2"></div>

    <div class="col-md-8">

        <div class="row">
            <div class="col-md-12">
                <user-summary v-bind:user="user"></user-summary>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <user-dividends v-bind:user="user"></user-dividends>
            </div>
        </div>

        <!--Single Account-->
        <div class="row" v-if="account!=null">
            <div class="col-md-12">
                <div class="panel panel-default card">
                    <div class="card-header">
                        {{account.name}}
                    </div>
                    <portfolio-list v-bind:account="account"></portfolio-list>
                </div>
                @*<div class="panel panel-default card">
                    <portfolio-dividend-list v-bind:account="account"></portfolio-dividend-list>
                </div>*@
            </div>
        </div>

        <!--All Accounts-->
        <div class="row" v-if="account==null" v-for="item in user.accounts" :key="item.accountId">
            <div class="col-md-12">
                <div class="panel panel-default card">
                    <div class="card-header">
                        {{item.name}}
                    </div>
                    <portfolio-list v-bind:account="item"></portfolio-list>
                </div>
            </div>
        </div>

    </div>
    <div class="col-md-2">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-content">

                        <button v-on:click="add()" class="btn btn-success btn-block">Add Account</button>

                    </div>
                </div>
            </div>
            <div class="col-12" v-for="(item, index) in user.accounts" :key="item.accountId" v-on:click="select(item, index)">
                <portfolio-summary v-bind:user="user" v-bind:account="item" v-bind:selected="item==account"></portfolio-summary>
            </div>

        </div>
    </div>
</div>


@section scripts
{

    <!--vue-->
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    <!--vue2-filters-->
    <script src="https://cdn.jsdelivr.net/npm/vue2-filters/dist/vue2-filters.min.js"></script>

    <!--lodash-->
    <script src="https://cdn.jsdelivr.net/npm/lodash@4.17.20/lodash.min.js"></script>

    <!--Axios-->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="/dist/Portfolio/js/portfolio-app.js" asp-append-version="true"></script>

    <!--Vue Component Template & code-->
    <partial name="Components/portfolio-list" />
    <partial name="Components/portfolio-dividend-list" />
    <partial name="Components/portfolio-add" />
    <partial name="Components/portfolio-summary" />
    <partial name="Components/user-summary" />
    <partial name="Components/user-dividends" />

    <!--Load vue app-->
    <script type="text/javascript">

        var mainVuew = new Vue({
            el: '#app',
            components: {
                'portfolio-list': portfolio_list,
                'portfolio-dividend-list': portfolio_dividend_list,
                'portfolio-add': portfolio_add,
                'portfolio-summary': portfolio_summary,
                'user-summary': user_summary,
                'user-dividends': user_dividends
            },
            data: function () {
                return {
                    user: {
                        Price: function () { return 0; },
                        Income: function () { return 0; },
                        Months: function () { return []; }
                    },
                    account: {}
                };
            },
            methods: {
                async getAccounts() {
                    const { data } = await axios.get('/api/account');

                    this.user = new c3o.Core.Data.User(data);

                    if (this.user.accounts) {
                        this.user.accounts.forEach(async function (item) {
                            item.investments.sort((a, b) => (a.ticker > b.ticker) ? 1 : -1);
                        });
                    }

                    this.account = null;
                },
                select(item, index) {

                    if (this.account == item) {
                        this.account = null;
                    }
                    else {
                        this.account = item;

                        // sort
                        this.account.investments.sort((a, b) => (a.ticker > b.ticker) ? 1 : -1);
                    }
                },
                async add() {
                    const { data } = await axios.post('/api/account/add');

                    this.account = new c3o.Core.Data.Account(data);

                    this.user.accounts.push(this.account);
                },
            },
            async mounted() {
                await this.getAccounts();
            },
        });
    </script>
}